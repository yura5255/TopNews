@using TopNews.Core.DTOs.Post;
@model PostDto

@{
    ViewData["Title"] = "Posts";
    Layout = "~/Views/Shared/_DashboardLayout.cshtml";
    <link rel="stylesheet" href="~/dashboard/plugins/summernote/summernote-bs4.min.css" />
}

<div class="content-wrapper">
    <!-- Content Header (Page header) -->
    <section class="content-header">
        <div class="container-fluid">
            <div class="row mb-2">
                <div class="col-sm-6">
                    <h1>Post managament</h1>
                </div>
                <div class="col-sm-6">
                    <ol class="breadcrumb float-sm-right">
                        <li class="breadcrumb-item"><a asp-action="Index">Home</a></li>
                        <li class="breadcrumb-item active">Create post</li>
                    </ol>
                </div>
            </div>
        </div><!-- /.container-fluid -->
    </section>

    <!-- Main content -->
    <section class="content">
        <div class="container-fluid">
            <!-- SELECT2 EXAMPLE -->
            <div class="card card-default">
                <div class="card-header">
                    <h3 class="card-title">Create post</h3>

                    <div class="card-tools">
                        <button type="button" class="btn btn-tool" data-card-widget="collapse">
                            <i class="fas fa-minus"></i>
                        </button>
                        <button type="button" class="btn btn-tool" data-card-widget="remove">
                            <i class="fas fa-times"></i>
                        </button>
                    </div>
                </div>
                <!-- /.card-header -->
                <div class="card-body">
                    <div class="row">
                        <div class="col-md-5 offset-3">
                            <div class="card card-primary">
                                <div class="card-header">
                                    <h3 class="card-title">New post</h3>
                                </div>
                                @if (@ViewBag.AuthError != null)
                                {
                                    <span class="text-danger mt-3">@ViewBag.AuthError</span>
                                }

                                <form method="post" asp-controller="Post" asp-action="Create" enctype="multipart/form-data">
                                    <div class="card-body">
                                        <div class="form-group">
                                            <label>Title</label>
                                            <input type="text" asp-for="@Model.Title" class="form-control" placeholder="Title" />
                                        </div>
                                        <div class="form-group">
                                            <label>Description</label>
                                            <textarea id="summernote" type="text" asp-for="@Model.Description" class="form-control">Place <em>your</em> <u>post</u> <string>heare...</string></textarea>
                                        </div>
                                        <div class="form-group">
                                            <label>Text</label>
                                            <textarea id="text" type="text" asp-for="@Model.FullText" class="form-control">Place <em>your</em> <u>post</u> <string>heare...</string></textarea>
                                        </div>
                                        <div class="form-group">
                                            <label>Category</label>
                                            <select asp-for="CategoryId" asp-items="ViewBag.CategoryList" class="custom-select form-control-border"></select>
                                        </div>
                                        <div class="form-group">
                                            <label>Image</label>
                                            <div class=" input-group">
                                                <div class="custom-file">
                                                    
                                                </div>
                                            </div>
                                        </div>
                                        <div class="card-footer">
                                            <button type="submit" class="btn btn-primary">Create</button>
                                        </div>
                                    </div>
                                </form>
                            </div>
                        </div>
                    </div>
                </div>
                <!-- /.card -->
            </div>
            <!-- /.row -->
        </div>
        <!-- /.container-fluid -->
    </section>
    <!-- /.content -->
</div>

@section Scripts {
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.11/cropper.min.css">
    <script src="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.11/cropper.min.js"></script>

    <script>
        $(document).ready(function () {
            var imageInput = document.getElementById('imageInput');
            var cropperContainer = document.getElementById('cropperContainer');
            var cropperImage = document.getElementById('cropperImage');
            var cropButton = document.getElementById('cropButton');
            var croppedImageDataInput = document.getElementById('croppedImageData');
            var cropper;

            // Initialize Cropper.js when an image is selected
            imageInput.addEventListener('change', function () {
                if (imageInput.files && imageInput.files[0]) {
                    var reader = new FileReader();

                    reader.onload = function (e) {
                        // Set the source of the Cropper.js image
                        cropperImage.src = e.target.result;

                        // Initialize Cropper.js with the image element
                        cropper = new Cropper(cropperImage, {
                            aspectRatio: 1, // Set the desired aspect ratio
                            viewMode: 2,   // Set the view mode (0, 1, 2, 3)
                        });

                        // Show the cropping area
                        cropperContainer.style.display = 'block';
                    };

                    // Read the selected image
                    reader.readAsDataURL(imageInput.files[0]);
                }
            });

            // Handle cropping when the "Crop Image" button is clicked
            cropButton.addEventListener('click', function () {
                if (cropper) {
                    // Get the cropped canvas
                    var croppedCanvas = cropper.getCroppedCanvas();

                    // Get the cropped image data as a base64-encoded string
                    var croppedData = croppedCanvas.toDataURL('image/jpeg'); // Adjust format as needed

                    // Set the cropped image data in the hidden field
                    croppedImageDataInput.value = croppedData;

                    // Hide the cropping area
                    cropperContainer.style.display = 'none';
                }
            });
        $(function () {
            $('#summernote').summernote({
                minHeight: 200
            })

            $('#text').summernote({
                minHeight: 200
            })
        })
        });
    </script>
}                                       